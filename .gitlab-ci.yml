---
include:
  - local: /jobs/terraform-prepare.yml

variables:
  TF_ROOT: ${CI_PROJECT_DIR}/${TF_ENV_PATH}  # The relative path to the root directory of the Terraform project
  TF_VAR_ansible_dir: ${CI_PROJECT_DIR}/ansible
  TF_VAR_private_key_location: ~/.ssh/ec2.pem

stages:
  - iac_validate
  - iac_plan
  - iac_apply_destroy

default:
  image:
    name: alpine/gitlab-ansible-terraform
    entrypoint:
      - /usr/bin/env
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  before_script:
    - mkdir ~/.ssh
    - cat $PRIVATE_KEY > ~/.ssh/ec2.pem
    - chmod 400 ~/.ssh/ec2.pem
    - cd ${TF_ROOT}
    - terraform init
  cache:
    key: terraform
    paths:
      - .terraform

terraform_validate:
  stage: iac_validate
  script:
    - terraform validate
  except:
    refs:
      - main

terraform_plan:
  stage: iac_plan
  script:
    - terraform plan -out "terraform.tfplan"
  only:
    refs:
      - main
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/terraform.tfplan

terraform_plan_destroy:
  stage: iac_plan
  script:
    - terraform plan -destroy -out "terraform-destroy.tfplan"
  when: manual
  only:
    refs:
      - main
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/terraform-destroy.tfplan

terraform_apply:
  stage: iac_apply_destroy
  script:
    - terraform apply --auto-approve "terraform.tfplan"
  when: manual
  allow_failure: false
  only:
    refs:
      - main

terraform_destroy:
  stage: iac_apply_destroy
  script:
    - terraform apply -destroy --auto-approve "terraform-destroy.tfplan"
  when: manual
  only:
    refs:
      - main
